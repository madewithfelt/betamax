import 'dart:async';

import 'package:http/io_client.dart';

import 'http_intercepted_types.dart';

abstract class HttpInterceptor {
  /// [correlator] is a value generated by the client for each request-response,
  /// exchange, and is used to associate the request with the response.
  ///
  /// Returns an [OverrideResponse] if the interceptor wishes to halt the
  /// regular network call, and return an alternate response.
  FutureOr<OverrideResponse> interceptRequest(
    InterceptedBaseRequest request,
    String correlator,
  );

  /// [correlator] is a value generated by the client for each request-response,
  /// exchange, and is used to associate the request with the response.
  void interceptStreamedResponse(
    InterceptedIOStreamedResponse response,
    String correlator,
  );
}

class OverrideResponse {
  OverrideResponse(this.streamedResponse);
  final IOStreamedResponse streamedResponse;
}
